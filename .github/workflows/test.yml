name: learn to use CI

on:
  push:
    branches:
      - develop

env:
  NODE_VERSION: "20"
  RELEASE_CHANNEL: insiders
  VERSION: 0.0.0
  PACKAGE_NAME: lapikit

jobs:
  prerelease:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    permissions:
      contents: write
    outputs:
      version_release: ${{ steps.set_version.outputs.version_release }}
      sha_short: ${{ steps.get_sha_version.outputs.version_release }}

    steps:
      - uses: actions/checkout@v4

      - name: resolve version
        id: get_sha_version
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          echo "sha_version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: generate version
        id: set_version
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          sha_version="${{ steps.get_sha_version.outputs.sha_version }}"
          echo "version_release=${VERSION}-${RELEASE_CHANNEL}.${sha_version}" >> $GITHUB_OUTPUT
  publish:
    runs-on: ubuntu-latest
    needs: prerelease
    env:
      version_release: ${{ needs.prerelease.outputs.version_release }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1.2.2

      - name: install dependencies
        run: |
          bun install

      - name: add version insider to package.json
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          git config --force user.name "github-actions[bot]"
          git config --force user.email "github-actions[bot]@users.noreply.github.com"
          git branch --show-current
          npm version ${{ env.version_release }} -f

      - name: authenticate to npm
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: build package
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          bun run build

      - name: verify package
        run: |
          cd packages/${{ env.PACKAGE_NAME }}
          npm pack --dry-run

    #   - name: publish to npm
    #     run: |
    #       cd packages/${{ env.PACKAGE_NAME }}
    #       echo "Publishing version ${{ env.version_release }}"
    #       npm publish --tag insiders
    #     env:
    #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
